"use strict";(()=>{var e={};e.id=380,e.ids=[380],e.modules={1185:e=>{e.exports=require("mongoose")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},766:(e,t,a)=>{a.r(t),a.d(t,{headerHooks:()=>m,originalPathname:()=>w,requestAsyncStorage:()=>c,routeModule:()=>u,serverHooks:()=>l,staticGenerationAsyncStorage:()=>p,staticGenerationBailout:()=>g});var n={};a.r(n),a.d(n,{GET:()=>GET,PUT:()=>PUT});var o=a(884),r=a(6132),s=a(9954),i=a(1922),d=a(5798);async function PUT(e,{params:t}){let{id:a}=t,{newName:n,newEmail:o}=await e.json();await (0,s.Z)(),await i.Z.findByIdAndUpdate(a,{name:n,email:o});let r=await i.Z.find();return d.Z.json(r,{status:200})}async function GET(e,{params:t}){let{id:a}=t;await (0,s.Z)();let n=await i.Z.findById({_id:a});return d.Z.json(n,{status:200})}let u=new o.AppRouteRouteModule({definition:{kind:r.x.APP_ROUTE,page:"/api/users/[id]/route",pathname:"/api/users/[id]",filename:"route",bundlePath:"app/api/users/[id]/route"},resolvedPagePath:"E:\\GIT REPOSITORIES\\admin-banner\\src\\app\\api\\users\\[id]\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:c,staticGenerationAsyncStorage:p,serverHooks:l,headerHooks:m,staticGenerationBailout:g}=u,w="/api/users/[id]/route"},1922:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(1185),o=a.n(n);let r=new n.Schema({name:String,email:String},{timestamps:!1}),s=o().models.User||o().model("User",r),i=s},9954:(e,t,a)=>{a.d(t,{Z:()=>r});var n=a(1185),o=a.n(n);let connectMongoDB=async()=>{try{await o().connect(process.env.MONGODB_URL),console.log("connected to mongo")}catch(e){console.log(e)}},r=connectMongoDB}};var t=require("../../../../webpack-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),a=t.X(0,[997],()=>__webpack_exec__(766));module.exports=a})();